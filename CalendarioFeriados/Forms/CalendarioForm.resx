<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAMDAAAAEAIABPBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAwAAAAMAgGAAAAVwL5hwAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAD5ElEQVRoQ+2YS0hU
        URjHPx/jexzf5WSaqKWZQlphZNSiwHYVEUHRskXtgqAsAltE0LagXVBEDyIXtQiilyW5SOzpuzRfo/l2
        dHQcH53/8YzdGa93ZrxXL8r84DD3++69er5zvte5AafKq2dpFRMoflctfgP0xm+A3vgN0Buf60BOgpGN
        KCERVbT1U59tUkjKHM1OFldEf4bHqdoyJKSl4/MOYPJH2EScIzEiVNzxjPS9wmST0Kpj7bpQmimcilPj
        +a+TF009lBkbyVfQyfWPTZQZF0l5SUahWQjc5cH3Drp/uEBoiD4w13tc20XndmwSGiKbY5rq+0bpdWsf
        OaZnhFYZ2R3ITTRS2f5sKslIEj4/N0yhBvGEK8lRoS7PuQ/pIkgxBAa4PFeYHEMn81KodE8WBQUEiKeU
        kTUAwbbYH+hlAVvXZ50fNseUuOMZ6XuWUbvQLgQ7mr8uWkjKyBqQaooQVwvB1sNtnAPu4S3S9543dgut
        PKmL7Jo7sjEg9VW9KK+30DM2PLHqs9DaTKNSF4KP+xKoakhjsRdhCOLX3rqQRwMQcMgaK0FpcRZPp8Af
        A6sF1QaYjWF0LMdM11jlPlOQxmU5tq83sbYhXUjaocoAVOvzRRkUGhxI976108TUDG8DjCHB4ok5MPmz
        bPKmMFe9FqgyYHN8FFntU/ToRyc1D4zxhi2Q9zf/zwun8zfyybcN24RGW1QZgOxUVtFA07NziSwlOoyv
        vnVymssAHealN7X0s3d5MpkmQYxJX9idSVf2bqEnrEWWpt2ndV1en9gsVjvd/drm00lNEwMcMzNU1TlI
        X7qH6UB64nwu9xXE0eC4g+5Ut1LHiHdNoiYGIHjRpd7+3ELNg2N0KDNJ3PENxA/iJTcxmmp6RoRWGVUG
        oGfHoUdKJ1u5xVKpJ/KToimMZbSd5hh1JzJvge+f2LaBEiJCuIw+Zl9aAjX2j3LZVzBxgJOZIci7qaky
        oLJ9gLsOihjqwa2SPBawdnrI0qonYLT0OImBiQPswkERS86RHiN/yNKkmcM/hN9i8oud0LA7WNXhCQeX
        cWyVfhzwRMuQja6+qxfSfzQLYqQ+peMl6oFz8gCdJoIeek+8/PWXyt43CMkVTQxYKlUdg3T5bR2v4nJY
        J6fo5qdmXuGdxdId3c/E2AW0IxdZD+UOVh6TV0LXHQAW6wQVpcQKyZVdZnm9FF0N6Bmzs4o7MZ99IN+o
        bKIaVtFBXLiBN4xKyLqQ9CvycoLMMskKFtwH6djZkgMUyONbzfwzo5IbyRqwkiDHY6VRU9zBJ0nswKvf
        vUKzEN0NUIvuQawWvwF64zdAb/wG6AvRP28fnWH8aj3wAAAAAElFTkSuQmCC
</value>
  </data>
</root>